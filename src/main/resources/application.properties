application.title=${APPLICATION_TITLE:Tienda API Rest Spring Boot}
application.version=${APPLICATION_VERSION:1.0.0}
## PORT
# Cambiamos el puerto de escucha, por defecto es 8080
# e indicamos que lea la variable de entorno PORT si no existe que use 3000
# Si no tenemos SSL es el puerto por defecto, si activamos SSL toma este y debemos a?adir otro para el puerto Normal, no SSL
server.port=${API_PORT:3000}
# Puerto de escucha para el servidor normal, no SSL, si no tenemos SSL es el puerto por defecto, si activamos SSL toma este
# server.http.port=${PORT:3080}
## COMPRIMIR RESPUESTAS
server.compression.enabled=${COMPRESS_ENABLED:true}
# server.compression.mime-types=text/html,text/xml,text/plain,text/css,application/json,application/javascript
server.compression.min-response-size=1024
##  LOCALE
# Configuramos el locale en Espa?a, si no fechas, numeros y monedas puede que no salgan bien.
spring.web.locale=es_ES
spring.web.locale-resolver=fixed
## API VERSION Y DESCRIPCION
# Versionamos la API
api.version=${API_VERSION:v1}
project.name=Tenistas API REST Spring Boot
## MENSAJE DE ERROR EN LAS EXCEPCIONES DE LA API
# Para los mensajes en las excepciones
server.error.include-message=always
## ALMACENAMIENTO DE FICHEROS
## directorio de almacenamiento
upload.root-location=storage-dir
## Si queremos que se borre, quitar en producci?n

spring.jackson.mapper.default-view-inclusion=true
## NEGOCIACION DE CONTENIDOS
spring.mvc.contentnegotiation.favor-parameter=true
spring.mvc.contentnegotiation.parameter-name=format
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.messages.basename=messages
spring.messages.cache-duration=-1
spring.messages.encoding=UTF-8
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
jwt.secret=123456
jwt.expiration=86400
jwt.keystore.path=src/main/resources/cert/serverstore.jks
jwt.keystore.password=123456
jwt.key.alias=serverkey
jwt.key.password=123456
server.ssl.key-store-type=JKS
server.ssl.key-store=classpath:cert/serverstore.jks
server.ssl.key-store-password=123456
server.ssl.key-alias=serverkey
server.ssl.enabled=true
spring.profiles.active=${PERFIL:dev}
spring.main.allow-bean-definition-overriding=true


